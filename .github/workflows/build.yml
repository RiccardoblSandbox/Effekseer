on:
  release:
    types: [published]
  push:
    branches:
      - master
      - 15x
  pull_request:
    branches:
      - master
      - 15x
jobs:     
  Build:
    strategy:
      fail-fast: true
      matrix:
        name: [linux,windows]
        include:
          - name: linux
            os: ubuntu-latest
          - name: windows
            os: vs2017-win2016
    name: Build on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
      - run: |
          git lfs install
          git lfs pull
      
      - name: Setup MSBuild.exe
        if: matrix.name == 'windows'
        uses: warrenbuckley/Setup-MSBuild@v1
        
      - name: Install Linux Dependencies
        if: matrix.name == 'linux'
        run: |
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg
          sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
          wget -q https://packages.microsoft.com/config/ubuntu/18.04/prod.list 
          sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update
          sudo apt-get install -y  libpulse-dev libglvnd-dev libx11-dev libopenal-dev libvulkan-dev \
               libgl1-mesa-dev libgles2-mesa-dev libglu1-mesa-dev libgtk-3-dev ninja-build dotnet-sdk-3.1 \
               xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev
        
      - name: Build
        shell: bash
        run: python3 build.py || python build.py
      
      - name: Prepare Runtime
        if: matrix.name == 'windows'
        run: |
          release_runtime.bat
        shell: cmd
        
      - name: Upload Runtime
        if: matrix.name == 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: EffekseerRuntime
          path: EffekseerRuntime*

      - name: Prepare Windows Tool
        run: |
          release_tool.bat
        if: matrix.name == 'windows'
        shell: cmd

      - name: Upload Windows Tool
        if: matrix.name == 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: Effekseer-${{matrix.name}}
          path: Effekseer*Win

      - name: Prepare Linux Tool
        run: |
          bash ./release_tool.sh
        if: matrix.name == 'linux'

      - name: Upload Linux Tool
        if: matrix.name == 'linux'
        uses: actions/upload-artifact@v2
        with:
          name: Effekseer-${{matrix.name}}
          path: EffekseerTool
          
  Deploy:
    if: github.event_name == 'release'
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Effekseer-windows
          path: EffekseerWindows.zip
          
      
      - uses: actions/download-artifact@v2
        with:
          name: Effekseer-linux
          path: EffekseerLinux.zip
      
      - uses: actions/download-artifact@v2
        with:
          name: EffekseerRuntime
          path: EffekseerRuntime.zip
      
      - name: Deploy to github releases    
        run: |
          releaseId=$(jq --raw-output '.release.id' ${GITHUB_EVENT_PATH})
          echo "Upload to release $releaseId"
          filename="$(ls *.zip)"
          url="https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$releaseId/assets?name=$(basename $filename)"
          echo "Upload to $url"
          curl -L \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/zip" \
          --data-binary @"$filename" \
          "$url"
        
