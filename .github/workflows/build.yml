on:
  push:
    branches:
      - master
      - 15x
  pull_request:
    branches:
      - master
      - 15x
jobs:     
  BuildTool:
    strategy:
      matrix:
        name: [linux,windows]
        include:
          - name: linux
            os: ubuntu-latest
          - name: windows
            os: vs2017-win2016
    name: Build on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
      - run: |
          git lfs install
          git lfs pull
      
      - name: Setup MSBuild.exe
        if: matrix.name == 'windows'
        uses: warrenbuckley/Setup-MSBuild@v1
        
      - name: Install Linux Dependencies
        if: matrix.name == 'linux'
        run: |
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg
          sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
          wget -q https://packages.microsoft.com/config/ubuntu/18.04/prod.list 
          sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update
          sudo apt-get install -y  libpulse-dev libglvnd-dev libx11-dev libopenal-dev libvulkan-dev \
               libgl1-mesa-dev libgles2-mesa-dev libglu1-mesa-dev libgtk-3-dev ninja-build dotnet-sdk-3.1 \
               xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev
        
      - name: Build
        shell: bash
        run: python3 build.py || python build.py
      
      - name: Prepare Runtime
        if: matrix.name == 'windows'
        run: |
          release_runtime.bat
          move EffekseerRuntime* EffekseerRuntime
        shell: cmd
        
      - name: Upload Runtime
        if: matrix.name == 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: EffekseerRuntime
          path: EffekseerRuntime

      - name: Prepare Windows Tool
        run: |
          release_tool.bat
          move Effekseer*Win EffekseerTool
        if: matrix.name == 'windows'
        shell: cmd

      - name: Prepare Linux Tool
        run: |
          bash ./release_tool.sh
        if: matrix.name == 'linux'

      - name: Upload Tool
        uses: actions/upload-artifact@v2
        with:
          name: Effekseer-${{matrix.name}}
          path: EffekseerTool
          

        
